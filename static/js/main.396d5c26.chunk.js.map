{"version":3,"sources":["components/Pagination/Pagination.tsx","utils.ts","App.tsx","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pagesCount","Math","ceil","pages","Array","from","keys","shift","isPrevDisabled","isNextDisabled","className","href","onClick","map","page","getNumbers","to","numbers","n","push","App","useState","setCurrentPage","setPerPage","fromCount","toCount","id","value","onChange","event","currentTarget","htmlFor","number","ReactDOM","render","document","getElementById"],"mappings":"4KASaA,EAAuB,SAAC,GAK9B,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQC,MAAMC,KAAKD,MAAMJ,EAAa,GAAGM,QAE/CH,EAAMI,QAEN,IAAMC,EAAiC,IAAhBV,EACjBW,EAAiBX,IAAgBE,EAAa,EAEpD,OACE,qBAAIU,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAAeF,GAAkB,YAA9C,SACE,mBACE,UAAQ,WACRE,UAAU,YACVC,KAAI,WAAMR,EAAML,EAAc,IAC9B,gBAAeU,EACfI,QAAS,kBAAMb,EAAaD,EAAc,IAL5C,oBAWDK,EAAMU,KAAI,SAAAC,GAAI,OACb,oBAAIJ,UAAS,oBAAeZ,IAAgBgB,GAAQ,UAApD,SACE,mBACE,UAAQ,WACRJ,UAAU,YACVC,KAAI,WAAMG,GACVF,QAAS,kBAAMb,EAAae,IAJ9B,SAMGA,SAKP,oBAAIJ,UAAS,oBAAeD,GAAkB,YAA9C,SACE,mBACE,UAAQ,WACRC,UAAU,YACVC,KAAI,WAAMR,EAAML,EAAc,IAC9B,gBAAeW,EACfG,QAAS,kBAAMb,EAAaD,EAAc,IAL5C,wBCnDD,SAASiB,EAAWV,EAAcW,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIb,EAAMa,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,ECFF,IAAMG,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOvB,EAAP,KAAoBwB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOxB,EAAP,KAAgB0B,EAAhB,KAUMC,GAAc1B,EAAc,GAAKD,EAAW,EAC5C4B,EAAU3B,IAHCG,KAAKC,KAPH,GAOqBL,GAPrB,GAYfC,EAAcD,EAElB,OACE,sBAAKa,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWZ,EADX,4BAEW0B,EAFX,cAE0BC,EAF1B,eAlBe,GAkBf,OAKA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRgB,GAAG,kBACHhB,UAAU,eACViB,MAAO9B,EACP+B,SA5Ba,SAACC,GACtBN,GAAYM,EAAMC,cAAcH,OAChCL,EAAe,IAqBT,UAOE,wBAAQK,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBrB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEd,MA7Ca,GA8CbC,QAASA,EACTC,YAAaA,EACbC,aAAcuB,IAEhB,6BACGP,EAAWS,EAAWC,GAASZ,KAAI,SAAAmB,GAAM,OACxC,oBACEtB,UAAU,OAEV,UAAQ,OAHV,wBAKWsB,IAHJA,YC3DjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.396d5c26.chunk.js","sourcesContent":["import { FC } from 'react';\n\ntype Props = {\n  total: number // total number of items to paginate\n  perPage: number\n  currentPage: number\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination:FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesCount = Math.ceil(total / perPage);\n  const pages = Array.from(Array(pagesCount + 1).keys());\n\n  pages.shift();\n\n  const isPrevDisabled = currentPage === 1;\n  const isNextDisabled = currentPage === pagesCount - 1;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${isPrevDisabled && 'disabled'}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${pages[currentPage - 1]}`}\n          aria-disabled={isPrevDisabled}\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li className={`page-item ${currentPage === page && 'active'}`}>\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={`page-item ${isNextDisabled && 'disabled'}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${pages[currentPage + 1]}`}\n          aria-disabled={isNextDisabled}\n          onClick={() => onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(3);\n  const itemsCount = 42;\n\n  const perPageHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.currentTarget.value);\n    setCurrentPage(1);\n  };\n\n  const lastPage = Math.ceil(itemsCount / perPage);\n\n  const fromCount = ((currentPage - 1) * perPage) + 1;\n  const toCount = currentPage === lastPage\n    ? itemsCount\n    : currentPage * perPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage}\n        (items ${fromCount} - ${toCount} of ${itemsCount})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={perPageHandler}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={itemsCount}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {getNumbers(fromCount, toCount).map(number => (\n          <li\n            className=\"item\"\n            key={number}\n            data-cy=\"item\"\n          >\n            {`Item ${number}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}